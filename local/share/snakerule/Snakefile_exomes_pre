include: "conf.sk"

rule muts_table:
    input: MUTS_REDUCED
    output: "muts_all_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

rule muts_gene_table:
    input: MUTS_GENE_REDUCED
    output: "muts_gene_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

rule sanger_all:
    input: SANGER
    output: "sanger_all.txt"
    shell:
        """
            grep LMX {input} |  perl -ane 'my $c=substr($F[0],0,7); print "$c\\t$F[7]\\n"' > {output}
        """

rule sanger_driver:
    input: SANGER
    output: "sanger_driver.txt"
    shell:
        """
            grep LMX {input} |  perl -ane 'if ($F[17] =~ /TRUE/i) {{my $c=substr($F[0],0,7); print "$c\\t$F[7]\\n"}}' > {output}
        """

rule muts_sanger_table:
    input: "sanger_all.txt"
    output: "muts_sanger_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

rule muts_sangerdriver_table:
    input: "sanger_driver.txt"
    output: "muts_sangerdriver_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

rule muts_cnv_table:
    input: CNV
    output: "muts_cnv_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

rule avg_week:
    input: volumes=VOLUMES
    output: waterfall="{wr}-{wt}_waterfall.png", means="{wr}-{wt}_avg.tsv"
    params: debug=DEBUG, pdx="pdx", ref="{wr}", target="{wt}"  
    script: SRC_DIR+"average_volumes_pdx.R"

rule models:
    input: volumes="{weeks}_avg.tsv", pivot="muts_{type}_pivot.txt"
    output: linear="{weeks}.{type}_linear_models.tsv", logistic="{weeks}.{type}_logistic_models.tsv"
    params: debug=DEBUG, pdx="pdx", cutoff=3 
    script: SRC_DIR+"models_vol_pivot.R"

