import os
import pandas as pd

DATA="../../local/share/data"
DATASET=DATA+"/review"
DELRIO=DATASET+"/delrio"
SRC_DIR="../../local/src"
BIN_DIR="../../local/bin"

ROOT=os.environ.get("SNAKE_ROOT")

rule manipulation:
    input: one=DELRIO+"GSE72970_series_matrix.txt.gz", two=DELRIO+"GSE62080_series_matrix.txt.gz"
    output: one="GSE72970_delrio_exprdata.tsv.gz", two="GSE62080_delrio_exprdata.tsv.gz"
    shell:
        """
            zcat {input.one} | grep -v '^!' | sed 1d | tr -d '"' | gzip -c > {output.one}
            zcat {input.two} | grep -v '^!' | sed 1d | tr -d '"' | gzip -c > {output.two}
        """

rule tosymbol:
    input: one="GSE72970_delrio_exprdata.tsv.gz", two="GSE62080_delrio_exprdata.tsv.gz"
    output: symbol="both_delrio_exprdata_symbol.tsv.gz", mean="both_delrio_exprdata_symbol_genemean.tsv.gz"
    script: SRC_DIR+"/delrio_expr_manipulation.R"

rule changename:
    input: resp=DELRIO+"/delrio_folfiri_response.tsv", dic=DELRIO+"/samples_dictionary"
    output: "delrio_folfiri_response_GSMname_SD.tsv"
    shell:
        """
            cat {input.resp} | translate -a -v -n {input.dic} 1 > {output}
        """

rule noSD:
    input: "delrio_folfiri_response_GSMname.tsv"
    output: "delrio_folfiri_response_GSMname_noSD.tsv"
    shell:
        """
            cat {input} | bawk '$4!="SD"' > {output}
        """

rule limma:
	input: m="both_delrio_exprdata_symbol_genemean.tsv.gz", info="delrio_folfiri_response_GSMname_{sd}.tsv"
	params: tool=BIN_DIR+"/limma_review", alpha=0.05, lfc=0.585
	output: table="{what}/limma_{column}_{contrast}_{batch}_{sd}.tsv", summ="{what}/limma_{column}_{contrast}_{batch}_summary_{sd}.tsv", volcano="{what}/limma_{column}_{contrast}_{batch}_volcano_{sd}.pdf", image="{what}/limma_{column}_{contrast}_{batch}_{sd}.RData"
	shell:
		"""
            {params.tool} -m {input.m} -i {input.info} -f "~ {wildcards.column}" -c {wildcards.contrast} -b {wildcards.batch} -o {output.table} -s {output.summ} -v {output.volcano} -a {params.alpha} -l {params.lfc} -w {wildcards.what} -r {output.image}
		"""

rule confronto:
    input: our=DATA+"/type_cutoff0.05-resistant.vs.sensitive.deseq2.tsv", delrio="NRvR/limma_grp_NR-R_off_NRvR.tsv"
    output: diff="difference_chemio.tsv"
    shell:
        """
            head -n1 {input.delrio} > {output.diff}
            grep -w -f <(cat {input.our} | bawk '$3>=0.585 || $3<=-0.585' | bawk '$7<0.05' | cut -f1 | sed 's/^..//') {input.delrio} >> {output.diff}
        """


rule sign:
    input: our=DATA+"/type_cutoff0.05-resistant.vs.sensitive.deseq2.tsv"
    output: "chemio_differential-genes.tsv"
    shell:
        """
            cat {input.our} | bawk '$3>=0.585 || $3<=-0.585' | bawk '$7<0.05' | sed 's/^..//' > {output}
        """


#### signatures ###
# rule allenetal:
#     input: our=DATA+"/type_cutoff0.05-resistant.vs.sensitive.deseq2.tsv", allen=DATA+"/signature/allenetal"
#     output: diff="signature/difference_chemio_allenetal.tsv"
#     shell:
#         """

#         """



### magnifici 25

rule magnifici:
    input: methy=ROOT+"/prj/pdx_methylation/dataset/v4/heatmap/All_samples_info_final_k5_2023.tsv", magnifici=ROOT+"/prj/pdxopedia/local/share/data/magnifici29_samples_data"
    output: methy="magnifici29_inMethy_samples_data.tsv"
    run:
        methy = pd.read_csv(input.methy, sep="\t", header=0)
        methy["model"] = methy["type"].str[:7]
        magnifici = pd.read_csv(input.magnifici, sep="\t", header=0, index_col=0, names=["model", "batch", "response"])
        
        methy = methy.merge(magnifici, on="model", how="inner")
        methy = methy.drop_duplicates(subset=['type'])
        
        methy.to_csv(output.methy, sep="\t", index=False)
        
