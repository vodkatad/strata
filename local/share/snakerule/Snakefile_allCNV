include: "conf.sk"
#3 for other muts file
rule reduce_mut_gene:
    input: MUTS
    output: "muts_gene.txt"
    shell:
        """
            sed 1d {input} > {output}
        """

rule reduce_cnv_gene:
    input: CNV
    output: "cnv.txt"
    shell:
        """
            sed 1d {input}  > {output}
        """

rule muts_gene_table:
    input: "muts_{kind}.txt"
    output: "muts_{kind}_pivot.txt"
    run:
         import pandas
         data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','mut'])
         pt = pandas.pivot_table(data, index=['pdx'], columns='mut', aggfunc=lambda x: 1, fill_value=0)
         pt.to_csv(output[0], sep='\t', index=True)

PLACEHOLDER=-42
rule sanger_filter:
    input: "cnv.txt"
    output: "sanitized_cnv.txt"
    run:
        import pandas
        import math
        data = pandas.read_csv(input[0], sep="\t", header=None, names=['pdx','gene','cnv'])
        def min_or_na(x):
            #manually checked that we do not have nan with numbers
            if all([math.isnan(y) for y in x]):
                return PLACEHOLDER # such a pain https://stackoverflow.com/questions/18429491/groupby-columns-with-nan-missing-vaues
            else:
                return min(x)
        res = data.groupby(['pdx', 'gene'])['cnv'].apply(min_or_na)
        res.to_csv(output[0], sep='\t', index=True)

rule sanger_all:
    input: mut=SANGER, msi=MSI_TRUE
    output: "muts_sanger.txt"
    shell:
        """
            grep LMX {input.mut} |  perl -ane 'my $c=substr($F[0],0,7); print "$c\\t$F[7]\\n"' | filter_1col -v 1 {input.msi} > {output}
        """

wildcard_constraints:
    thr="[0-9]"

# XXX provare a tenere valore del CNV? gain e loss insieme invece che separati
rule cnv:
    input: mut="sanitized_cnv.txt", msi=MSI_TRUE
    output: "muts_cnv{thr}.txt"
    params: pl=PLACEHOLDER
    shell:
        """
        cat {input.mut} | bawk '$3 != "NA" && $3 >= {wildcards.thr} {{print $1,$2"_gain"}} $3 == {params.pl} {{print $1,$2"_loss"}}' | filter_1col -v 1 {input.msi} > {output}
        """

rule avg_week:
    input: volumes=VOLUMES
    output: waterfall="{wr}-{wt}_waterfall.png", means="{wr}-{wt}_avg.tsv"
    params: debug=DEBUG, pdx="pdx", ref="{wr}", target="{wt}"  
    script: SRC_DIR+"average_volumes_pdx.R"

rule models:
    input: volumes=W3, pivot="muts_{type}_pivot.txt", msi=MSI, gsannot=GS_DESC
    output: linear="{type}_linear_models.tsv", logistic="{type}_logistic_models.tsv", linearxls="{type}_linear_models.xls"
    params: debug=DEBUG, pdx="pdx", cutoff=3, plotdir="{type}_plots"
    script: SRC_DIR+"models_vol_pivot.R"


#### Pathways
# do not work with CNV right now, _gain _loss is there.
rule translate_gene_sign:
    input: muts="muts_{kind}.txt", path=PATHWAYS
    output: "muts_{kind}pathways.txt"
    shell:  
        """
            translate -n -a -d -j -k <(bawk '{{print $1"_"$2,$3}}' < {input.path} | sort | uniq) 2 < {input.muts} | cut -f 1,3 | sort | uniq > {output}
        """

